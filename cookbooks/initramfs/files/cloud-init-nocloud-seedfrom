#!/bin/sh
# vim: set noet :

[ "$1" = 'prereqs' ] && { exit 0; }

cloud_init_nocloud_seedfrom() {(
	if [ ! -d "${rootmnt}/etc/cloud/cloud.cfg.d" ]; then
		return
	fi

	for cmdline in $(cat /proc/cmdline); do
		case ${cmdline} in
			ds=*)
				datastore="${cmdline#ds=}"
				;;
			seednet=*)
				seednet="${cmdline#seednet=}"
				;;
		esac
	done

	if [ -z "${datastore}" ]; then
		return
	fi

	if [ "${datastore%%;*}" != "nocloud" ]; then
		return
	fi

	OLDIFS="$IFS"
	IFS=";"
	for cmdline in ${datastore}; do
		case ${cmdline} in
			s=*)
				seedfrom="${cmdline#s=}"
				;;
			seedfrom=*)
				seedfrom="${cmdline#seedfrom=}"
				;;
		esac
	done
	IFS="$OLDIFS"

	if [ -z "${seedfrom}" ] && [ -n "${seednet}" ]; then
		# If the seedfrom parameter is not set and the seednet parameter is set, reset the seedfrom parameter.
		seedfrom="$(echo "${seednet}" | sed -E "s/#HOSTNAME#/$(hostname -s)/; s/#DOMAINNAME#/$(hostname -d)/; s/#FQDN#/$(hostname -f)/;")"
	fi

	if [ -n "${seedfrom}" ]; then
		# Cloud-Init expects seedfrom to be set in the kernel command line parameters, so it corresponds in the configuration file.
		{
			echo "datasource:"
			echo "  NoCloud:"
			echo "    seedfrom: ${seedfrom}"
		} > "${rootmnt}/etc/cloud/cloud.cfg.d/99_seednet_to_seedfrom_param.cfg"
	fi
)}

. /scripts/functions

cloud_init_nocloud_seedfrom
