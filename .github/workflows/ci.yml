name: CI
on:
  push:
    branches:
    - master
  schedule:
  - cron: '12 12 * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
        - info
        - debug
permissions:
  contents: read
jobs:
  matrix:
    name: Setup matrix
    runs-on: ubuntu-20.04
    outputs:
      targets: ${{ steps.matrix.outputs.targets }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup matrix
      id: matrix
      run: echo "::set-output name=targets::$(rake github:actions:all)"
  build-and-publish:
    needs: matrix
    name: ${{ matrix.target.name }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: ${{ fromJson(needs.matrix.outputs.targets) }}
    env:
      TARGET_NAME: ${{ matrix.target.name }}
      RELEASE_DIR: ${{ matrix.target.dir }}
      INITRAMFS_COMPRESS: xz
      ROOTFS_ARCHIVE_FORMAT_TARBALL: xz
      ROOTFS_ARCHIVE_FORMAT_SQUASHFS: xz
    steps:
    #
    # Environment Variables
    #
    - name: Log Level
      if: github.event.inputs.logLevel != ''
      env:
        MITAMAE_LOG_LEVEL: ${{ github.event.inputs.logLevel }}
      run: |
        echo "LOG_LEVEL=${MITAMAE_LOG_LEVEL}" >> $GITHUB_ENV
    #
    # Prepare
    #
    - name: Update
      run: sudo apt-get -y update
    #
    # Build Image
    #
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 1
    - name: Initialize
      id: initialize
      run: rake ${TARGET_NAME}:initialize
    - name: Provision
      id: provision
      run: rake ${TARGET_NAME}:provision
    - name: Finalize
      id: finalize
      run: rake ${TARGET_NAME}:finalize
    #
    # Build Artifacts
    #
    - name: Sizes
      if: success()
      run: ls -lah releases/${RELEASE_DIR}/
    - name: Packages
      if: success()
      run: cat releases/${RELEASE_DIR}/packages.manifest
    - name: Checksums
      if: success()
      run: cat releases/${RELEASE_DIR}/SHA256SUMS
    #
    # Check Mount Point
    #
    - name: Check Mount Point
      if: failure()
      run: findmnt -aR /
    - name: Check Open Process
      if: failure()
      run: lsof /
    #
    # Check Difference
    #
    - name: Download Packages Manifest
      env:
        S3_BUCKET_URL: ${{ secrets.S3_BUCKET_URL }}
      run: |
        wget -qO /tmp/packages.manifest ${S3_BUCKET_URL}/${RELEASE_DIR}/packages.manifest || touch /tmp/packages.manifest
    - name: Check Difference
      run: diff -u /tmp/packages.manifest releases/${RELEASE_DIR}/packages.manifest || echo 'PUBLISH=true' >> $GITHUB_ENV
    #
    # Setup Rclone
    #
    - name: Setup rclone
      if: env.PUBLISH == 'true'
      run: curl https://rclone.org/install.sh | sudo bash
    #
    # Publish S3
    #
    - name: Publish
      if: env.PUBLISH == 'true'
      env:
        RCLONE_S3_ENV_AUTH: true
        RCLONE_S3_REGION: ${{ secrets.AWS_REGION }}
        RCLONE_S3_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        RCLONE_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        RCLONE_S3_PROVIDER: ${{ secrets.S3_PROVIDER }}
        RCLONE_S3_ENDPOINT: ${{ secrets.S3_ENDPOINT_URL }}
      run: >-
        rclone sync
        --config /dev/null
        --retries 60
        --retries-sleep 30
        --low-level-retries 10
        releases/${RELEASE_DIR}
        :s3:${{ secrets.S3_BUCKET_NAME }}/${RELEASE_DIR}
