name: CI
on:
  push:
    branches:
    - master
  schedule:
  - cron: '12 12 * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
        - info
        - debug
permissions:
  contents: read
env:
  APT_REPO_URL_UBUNTU: http://azure.archive.ubuntu.com/ubuntu
  APT_REPO_URL_UBUNTU_PORTS: http://azure.ports.ubuntu.com/ubuntu-ports
jobs:
  build-and-publish:
    name: ${{ matrix.distro }} ${{ matrix.release }} ${{ matrix.kernel }} ${{ matrix.profile }} (${{ matrix.arch }})
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        distro:  [ubuntu]
        arch:    [amd64, arm64]
        release: [bionic, focal, jammy]
        kernel:  [generic, generic-hwe]
        profile: [minimal, server, server-nvidia, desktop, desktop-nvidia]
        exclude:
        - arch: arm64
          profile: server-nvidia
        - arch: arm64
          profile: desktop-nvidia
        # FIXME: Because flash-kernel package fails in desktop recipe
        - arch: arm64
          release: bionic
        # TODO: Remove when ubuntu 22.10 is released
        - release: jammy
          kernel: generic-hwe
    env:
      PROFILE_YAML: profiles/${{ matrix.distro }}/${{ matrix.release }}/${{ matrix.kernel }}/${{ matrix.arch }}/${{ matrix.profile }}.yml
      TARGET_NAME: ${{ matrix.distro }}_${{ matrix.release }}_${{ matrix.kernel }}_${{ matrix.arch }}_${{ matrix.profile }}
      RELEASE_DIR: ${{ matrix.distro }}/${{ matrix.release }}/${{ matrix.kernel }}/${{ matrix.arch }}/${{ matrix.profile }}
      INITRAMFS_COMPRESS: xz
      ROOTFS_ARCHIVE_FORMAT_TARBALL: xz
      ROOTFS_ARCHIVE_FORMAT_SQUASHFS: xz
    steps:
    #
    # Environment Variables
    #
    - name: Log Level
      if: github.event.inputs.logLevel != ''
      env:
        MITAMAE_LOG_LEVEL: ${{ github.event.inputs.logLevel }}
      run: |
        echo "LOG_LEVEL=${MITAMAE_LOG_LEVEL}" >> $GITHUB_ENV

    #
    # Build Image
    #
    - name: Checkout
      uses: actions/checkout@master
      with:
        submodules: true
        fetch-depth: 1
    - name: Update
      run: sudo apt-get -y update
    - name: Initialize
      id: initialize
      run: rake ${TARGET_NAME}:initialize
    - name: Provision
      id: provision
      run: rake ${TARGET_NAME}:provision
    - name: Finalize
      id: finalize
      run: rake ${TARGET_NAME}:finalize

    #
    # Build Artifacts
    #
    - name: Sizes
      if: success()
      run: ls -lah releases/${RELEASE_DIR}/
    - name: Packages
      if: success()
      run: cat releases/${RELEASE_DIR}/packages.manifest
    - name: Checksums
      if: success()
      run: cat releases/${RELEASE_DIR}/SHA256SUMS

    #
    # Check Mount Point
    #
    - name: Check Mount Point
      if: failure()
      run: findmnt -aR /
    - name: Check Open Process
      if: failure()
      run: lsof /

    #
    # Check Difference
    #
    - name: Download Packages Manifest
      env:
        S3_BUCKET_URL: ${{ secrets.S3_BUCKET_URL }}
      run: |
        wget -qO /tmp/packages.manifest ${S3_BUCKET_URL}/${RELEASE_DIR}/packages.manifest || touch /tmp/packages.manifest
    - name: Check Difference
      run: diff -u /tmp/packages.manifest releases/${RELEASE_DIR}/packages.manifest || echo 'PUBLISH=true' >> $GITHUB_ENV

    #
    # Publish S3
    #
    - name: Publish
      if: env.PUBLISH == 'true'
      env:
        AWS_RETRY_MODE: standard
        AWS_MAX_ATTEMPTS: 10
        AWS_EC2_METADATA_DISABLED: true
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_ENDPOINT_URL: ${{ secrets.S3_ENDPOINT_URL }}
      run: >-
        aws s3 sync
        --endpoint-url=${S3_ENDPOINT_URL}
        --no-progress
        --exact-timestamps
        --delete
        releases/${RELEASE_DIR}
        s3://mitamae-cloud-image/${RELEASE_DIR}
